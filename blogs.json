{"status":"ok","feed":{"url":"https://medium.com/feed/@abinovarghese","title":"Stories by Abin O Varghese on Medium","link":"https://medium.com/@abinovarghese?source=rss-cac745895fe4------2","author":"","description":"Stories by Abin O Varghese on Medium","image":"https://cdn-images-1.medium.com/fit/c/150/150/0*9xO4Cusba2ekML4U.jpg"},"items":[{"title":"TOP 5 alternative AI systems like ChatGPT","pubDate":"2023-01-22 21:12:30","link":"https://medium.com/@abinovarghese/top-5-alternative-ai-systems-like-chatgpt-8c68133a0c96?source=rss-cac745895fe4------2","guid":"https://medium.com/p/8c68133a0c96","author":"Abin O Varghese","thumbnail":"","description":"\n<p>There are several open-source systems that have been trained using GPT-3 or a similar architecture. Some examples\u00a0include:</p>\n<ol><li>Hugging Face\u2019s Transformers: This is a popular open-source library that provides pre-trained models, including a GPT-3 variant, for natural language processing tasks such as language translation, text summarization, and sentiment analysis.</li></ol>\n<p>T5: T5 is another open-source language model developed by Google Research. Like GPT-3, it is trained on a massive dataset and is capable of generating human-like text. It has been used for a wide range of natural language processing tasks.</p>\n<ol>\n<li>DialoGPT: This is an open-source language model developed by Microsoft that is trained on a dataset of conversational text. It is particularly useful for chatbot and dialogue generation applications.</li>\n<li>Grover: Grover is an open-source language model developed by OpenAI that is similar to GPT-3 in terms of its architecture and ability to generate human-like text. It has been trained on a smaller dataset and is more computationally efficient than\u00a0GPT-3.</li>\n<li>Megatron: Megatron is an open-source language model developed by NVIDIA that is trained on a massive dataset and is capable of generating human-like text. It is designed to run on high-performance GPUs and is particularly useful for natural language processing tasks that require a high degree of computational power.</li>\n</ol>\n<p>These are some examples of open-source systems that have been trained using GPT-3 or similar architectures. They have been developed by reputable organizations and can be useful for people who want to use similar technology without the cost of proprietary software.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xCf6hwBC84VmUv4zdjIlxw.jpeg\"></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8c68133a0c96\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<p>There are several open-source systems that have been trained using GPT-3 or a similar architecture. Some examples\u00a0include:</p>\n<ol><li>Hugging Face\u2019s Transformers: This is a popular open-source library that provides pre-trained models, including a GPT-3 variant, for natural language processing tasks such as language translation, text summarization, and sentiment analysis.</li></ol>\n<p>T5: T5 is another open-source language model developed by Google Research. Like GPT-3, it is trained on a massive dataset and is capable of generating human-like text. It has been used for a wide range of natural language processing tasks.</p>\n<ol>\n<li>DialoGPT: This is an open-source language model developed by Microsoft that is trained on a dataset of conversational text. It is particularly useful for chatbot and dialogue generation applications.</li>\n<li>Grover: Grover is an open-source language model developed by OpenAI that is similar to GPT-3 in terms of its architecture and ability to generate human-like text. It has been trained on a smaller dataset and is more computationally efficient than\u00a0GPT-3.</li>\n<li>Megatron: Megatron is an open-source language model developed by NVIDIA that is trained on a massive dataset and is capable of generating human-like text. It is designed to run on high-performance GPUs and is particularly useful for natural language processing tasks that require a high degree of computational power.</li>\n</ol>\n<p>These are some examples of open-source systems that have been trained using GPT-3 or similar architectures. They have been developed by reputable organizations and can be useful for people who want to use similar technology without the cost of proprietary software.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*xCf6hwBC84VmUv4zdjIlxw.jpeg\"></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8c68133a0c96\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["ai","gpt-3"]},{"title":"GPT-3 model","pubDate":"2023-01-22 19:19:17","link":"https://medium.com/@abinovarghese/gpt-3-model-af84094f3a74?source=rss-cac745895fe4------2","guid":"https://medium.com/p/af84094f3a74","author":"Abin O Varghese","thumbnail":"","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*shgmbtNjzyJVl8pZIQqMNQ.jpeg\"></figure><p>GPT-3, short for \u201cGenerative Pre-trained Transformer 3,\u201d is a state-of-the-art language model developed by OpenAI. It has been trained on a massive dataset of over 570GB of text, making it one of the largest and most powerful language models to\u00a0date.</p>\n<p>One of the most notable features of GPT-3 is its ability to generate human-like text. It can write coherent and grammatically correct sentences, paragraphs, and even entire articles on a wide range of topics. This makes it particularly useful for tasks such as language translation, text summarization, and language generation.</p>\n<p>GPT-3 is also capable of understanding context and performing a wide range of natural language processing tasks. For example, it can answer questions, complete sentences, and even write code. It has been used in a variety of applications such as chatbots, automated writing, and even game development.</p>\n<p>One of the most important feature of GPT-3 is its ability to perform zero-shot learning, meaning it can generate text for a topic it has never seen before, just from the examples provided to it. This makes it a powerful tool for natural language generation and understanding.</p>\n<p>However, GPT-3 is not without its limitations. One of the main criticisms of the model is that it is not able to fully understand the meaning of the text it generates. It also has a tendency to perpetuate bias present in the training data. Additionally, it requires a lot of computational resources to train and run, making it cost-prohibitive for many companies and individuals to\u00a0use.</p>\n<p>Despite these limitations, GPT-3 is a significant step forward in the field of natural language processing and machine learning. Its ability to generate human-like text and perform a wide range of natural language tasks has the potential to revolutionize many industries. As the technology improves and becomes more accessible, we can expect to see even more applications for GPT-3 in the\u00a0future.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=af84094f3a74\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*shgmbtNjzyJVl8pZIQqMNQ.jpeg\"></figure><p>GPT-3, short for \u201cGenerative Pre-trained Transformer 3,\u201d is a state-of-the-art language model developed by OpenAI. It has been trained on a massive dataset of over 570GB of text, making it one of the largest and most powerful language models to\u00a0date.</p>\n<p>One of the most notable features of GPT-3 is its ability to generate human-like text. It can write coherent and grammatically correct sentences, paragraphs, and even entire articles on a wide range of topics. This makes it particularly useful for tasks such as language translation, text summarization, and language generation.</p>\n<p>GPT-3 is also capable of understanding context and performing a wide range of natural language processing tasks. For example, it can answer questions, complete sentences, and even write code. It has been used in a variety of applications such as chatbots, automated writing, and even game development.</p>\n<p>One of the most important feature of GPT-3 is its ability to perform zero-shot learning, meaning it can generate text for a topic it has never seen before, just from the examples provided to it. This makes it a powerful tool for natural language generation and understanding.</p>\n<p>However, GPT-3 is not without its limitations. One of the main criticisms of the model is that it is not able to fully understand the meaning of the text it generates. It also has a tendency to perpetuate bias present in the training data. Additionally, it requires a lot of computational resources to train and run, making it cost-prohibitive for many companies and individuals to\u00a0use.</p>\n<p>Despite these limitations, GPT-3 is a significant step forward in the field of natural language processing and machine learning. Its ability to generate human-like text and perform a wide range of natural language tasks has the potential to revolutionize many industries. As the technology improves and becomes more accessible, we can expect to see even more applications for GPT-3 in the\u00a0future.</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=af84094f3a74\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":[]},{"title":"Installing COCO API in Windows(Python)","pubDate":"2019-11-03 13:53:10","link":"https://medium.com/@abinovarghese/installing-coco-api-in-windows-python-9b4dfc3812ef?source=rss-cac745895fe4------2","guid":"https://medium.com/p/9b4dfc3812ef","author":"Abin O Varghese","thumbnail":"","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/417/1*QgrCBfxzcR7r937HscQ3Kg.jpeg\"></figure><p>For all the ML enthusiast, especially someone starting with Google\u2019s TensorFlow, COCO API is a must especially they provide a wide variety of Image data-sets.</p>\n<p>This post is about how I installed COCO in windows. COCO officially does not support windows and it was not easily installable.</p>\n<h3><strong>Prerequisites</strong></h3>\n<blockquote><a href=\"https://www.microsoft.com/en-in/download/details.aspx?id=48159\">Microsoft Build Tools\u00a02015</a></blockquote>\n<blockquote>Python</blockquote>\n<h3><strong>Steps</strong></h3>\n<p>First, Clone the project from the official repository\u00a0: <a href=\"https://github.com/cocodataset/cocoapi\">https://github.com/cocodataset/cocoapi</a></p>\n<p>Inside PythonAPI folder, we can find setpy.py file. Open the file and delete the following line:</p>\n<blockquote>extra_compile_args=[\u2018-Wno-cpp\u2019, \u2018-Wno-unused-function\u2019, \u2018-std=c99\u2019]</blockquote>\n<p>Then open cmd in the PythonAPI folder and run the\u00a0command</p>\n<blockquote><strong>python setup.py build_ext install</strong></blockquote>\n<p>Chances are you will get the error <a href=\"https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe\">Visual Studio can\u2019t build due to\u00a0rc.exe</a></p>\n<p>Follow the steps as specified in this stack overflow portal and rerun the\u00a0command.</p>\n<p>Quoting the post\u00a0below::</p>\n<blockquote>I would assume that in your case you would copy rc.exe and rcdll.dll to visual studio 2012\\vc\\bin or wherever you have it installed:</blockquote>\n<blockquote>Part 2: FIX LINK\u00a0: fatal error LNK1158: cannot run\u00a0\u2018rc.exe\u2019</blockquote>\n<blockquote>Add this to your PATH environment variables:</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86</em></blockquote>\n<blockquote>Copy these\u00a0files:</blockquote>\n<blockquote><em>rc.exe<br>rcdll.dll</em></blockquote>\n<blockquote>From</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86</em></blockquote>\n<blockquote>To</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\VC\\bin</em></blockquote>\n<p>Once you rerun the command, the COCO should get successfully installed in your windows\u00a0system.</p>\n<h3><strong>References</strong></h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe\">Visual Studio can't build due to rc.exe</a></li>\n<li><a href=\"https://github.com/cocodataset/cocoapi/issues/9\">Windows support for python API \u00b7 Issue #9 \u00b7 cocodataset/cocoapi</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9b4dfc3812ef\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/417/1*QgrCBfxzcR7r937HscQ3Kg.jpeg\"></figure><p>For all the ML enthusiast, especially someone starting with Google\u2019s TensorFlow, COCO API is a must especially they provide a wide variety of Image data-sets.</p>\n<p>This post is about how I installed COCO in windows. COCO officially does not support windows and it was not easily installable.</p>\n<h3><strong>Prerequisites</strong></h3>\n<blockquote><a href=\"https://www.microsoft.com/en-in/download/details.aspx?id=48159\">Microsoft Build Tools\u00a02015</a></blockquote>\n<blockquote>Python</blockquote>\n<h3><strong>Steps</strong></h3>\n<p>First, Clone the project from the official repository\u00a0: <a href=\"https://github.com/cocodataset/cocoapi\">https://github.com/cocodataset/cocoapi</a></p>\n<p>Inside PythonAPI folder, we can find setpy.py file. Open the file and delete the following line:</p>\n<blockquote>extra_compile_args=[\u2018-Wno-cpp\u2019, \u2018-Wno-unused-function\u2019, \u2018-std=c99\u2019]</blockquote>\n<p>Then open cmd in the PythonAPI folder and run the\u00a0command</p>\n<blockquote><strong>python setup.py build_ext install</strong></blockquote>\n<p>Chances are you will get the error <a href=\"https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe\">Visual Studio can\u2019t build due to\u00a0rc.exe</a></p>\n<p>Follow the steps as specified in this stack overflow portal and rerun the\u00a0command.</p>\n<p>Quoting the post\u00a0below::</p>\n<blockquote>I would assume that in your case you would copy rc.exe and rcdll.dll to visual studio 2012\\vc\\bin or wherever you have it installed:</blockquote>\n<blockquote>Part 2: FIX LINK\u00a0: fatal error LNK1158: cannot run\u00a0\u2018rc.exe\u2019</blockquote>\n<blockquote>Add this to your PATH environment variables:</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86</em></blockquote>\n<blockquote>Copy these\u00a0files:</blockquote>\n<blockquote><em>rc.exe<br>rcdll.dll</em></blockquote>\n<blockquote>From</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Windows Kits\\8.0\\bin\\x86</em></blockquote>\n<blockquote>To</blockquote>\n<blockquote><em>C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\VC\\bin</em></blockquote>\n<p>Once you rerun the command, the COCO should get successfully installed in your windows\u00a0system.</p>\n<h3><strong>References</strong></h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe\">Visual Studio can't build due to rc.exe</a></li>\n<li><a href=\"https://github.com/cocodataset/cocoapi/issues/9\">Windows support for python API \u00b7 Issue #9 \u00b7 cocodataset/cocoapi</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=9b4dfc3812ef\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["cocoapods","python","programming","tensorflow","machine-learning"]},{"title":"Interior-Design-AR","pubDate":"2019-10-31 19:25:53","link":"https://medium.com/@abinovarghese/interior-design-ar-42e242a5d520?source=rss-cac745895fe4------2","guid":"https://medium.com/p/42e242a5d520","author":"Abin O Varghese","thumbnail":"","description":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*h5X57jTbmvPcE5V-YVsUrw.jpeg\"></figure><p>I will make this post as precise as possible. This Android project was thought about when i first started playing around with Google AR Core SDK. Let me break it\u00a0down.</p>\n<p><strong>Why Do we need\u00a0AR?</strong></p>\n<blockquote>\u2022Improved Customer Experience</blockquote>\n<blockquote>\u2022\u201cFeel\u201d before\u00a0\u201cbuy\u201d</blockquote>\n<blockquote>\u2022Real time aesthetic design</blockquote>\n<p><strong>What if customer can do\u00a0more?</strong></p>\n<blockquote>\u2022One of the major plus point of AR is the customer can have an interactive experience</blockquote>\n<blockquote>\u2022But why limit the customer to select a pre selected set of 3D objects when we can do\u00a0more?</blockquote>\n<p><strong>Real Time Customization of 3D\u00a0Objects</strong></p>\n<blockquote>\u2022What if the customer change the specification that suits the room and what if customer can experience in real time the customization?</blockquote>\n<blockquote>\u2022Not all specification can be changed but we do can change\u00a0some.</blockquote>\n<blockquote>\u2022The major achievement of AR in this field is that customer gets the look and feel of the\u00a0design</blockquote>\n<blockquote>\u2022This APP is build on top of google\u2019s AR Core and in addition to the option to place/remove the 3d objects of furniture\u2019s in an AR environment we give the user the following options:</blockquote>\n<blockquote>\u2022<strong>Change the color of the object from a color picker included.</strong>\n</blockquote>\n<blockquote>\u2022<strong>Change the Texture of the object by changing two parameters called as Metallic Factor and Roughness Factor.</strong>\n</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/378/1*V73zs189xGO2I1YaK3FH9Q.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/352/1*73D71KTgpCyuT3nB12Td_w.jpeg\"><figcaption>App Interface</figcaption></figure><p>Once we select particular color and texture the object gets customized accordingly.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q2eA1q84JzYZDvgZxXAZsw.jpeg\"><figcaption><strong>Objects after customization</strong></figcaption></figure><p>Check the GitHub link\u00a0: <a href=\"https://github.com/abinovarghese/Interior-Design-AR\">https://github.com/abinovarghese/Interior-Design-AR</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=42e242a5d520\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*h5X57jTbmvPcE5V-YVsUrw.jpeg\"></figure><p>I will make this post as precise as possible. This Android project was thought about when i first started playing around with Google AR Core SDK. Let me break it\u00a0down.</p>\n<p><strong>Why Do we need\u00a0AR?</strong></p>\n<blockquote>\u2022Improved Customer Experience</blockquote>\n<blockquote>\u2022\u201cFeel\u201d before\u00a0\u201cbuy\u201d</blockquote>\n<blockquote>\u2022Real time aesthetic design</blockquote>\n<p><strong>What if customer can do\u00a0more?</strong></p>\n<blockquote>\u2022One of the major plus point of AR is the customer can have an interactive experience</blockquote>\n<blockquote>\u2022But why limit the customer to select a pre selected set of 3D objects when we can do\u00a0more?</blockquote>\n<p><strong>Real Time Customization of 3D\u00a0Objects</strong></p>\n<blockquote>\u2022What if the customer change the specification that suits the room and what if customer can experience in real time the customization?</blockquote>\n<blockquote>\u2022Not all specification can be changed but we do can change\u00a0some.</blockquote>\n<blockquote>\u2022The major achievement of AR in this field is that customer gets the look and feel of the\u00a0design</blockquote>\n<blockquote>\u2022This APP is build on top of google\u2019s AR Core and in addition to the option to place/remove the 3d objects of furniture\u2019s in an AR environment we give the user the following options:</blockquote>\n<blockquote>\u2022<strong>Change the color of the object from a color picker included.</strong>\n</blockquote>\n<blockquote>\u2022<strong>Change the Texture of the object by changing two parameters called as Metallic Factor and Roughness Factor.</strong>\n</blockquote>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/378/1*V73zs189xGO2I1YaK3FH9Q.jpeg\"></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/352/1*73D71KTgpCyuT3nB12Td_w.jpeg\"><figcaption>App Interface</figcaption></figure><p>Once we select particular color and texture the object gets customized accordingly.</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q2eA1q84JzYZDvgZxXAZsw.jpeg\"><figcaption><strong>Objects after customization</strong></figcaption></figure><p>Check the GitHub link\u00a0: <a href=\"https://github.com/abinovarghese/Interior-Design-AR\">https://github.com/abinovarghese/Interior-Design-AR</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=42e242a5d520\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["augmented-reality"]},{"title":"Jarviz V 1.0\u2014A  Chatbot using Rivescript","pubDate":"2019-10-31 15:49:29","link":"https://medium.com/@abinovarghese/jarviz-v-1-0-a-chatbot-using-rivescript-3eff2f7860ef?source=rss-cac745895fe4------2","guid":"https://medium.com/p/3eff2f7860ef","author":"Abin O Varghese","thumbnail":"","description":"\n<h3>Jarviz V 1.0\u2014A Chatbot using Rivescript</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fFKpnLF3kjCEscEkVtYLTg.jpeg\"></figure><p><a href=\"http://www.abinovarghese.com/jarviz\"><strong>Jarviz</strong></a> is a simple chatbot application created using Rivescript which is an \u201c simple scripting language for giving intelligence to chatbots and other conversational entities\u201d\u00a0. This project was inspired from one of the YouTube videos done by <a href=\"https://thecodingtrain.com/\"><strong>Coding\u00a0Train</strong></a>.</p>\n<p>I have used Java Interpreter Library of the Rivescript and have integrated the same with person website. This library is Open Source and is another kind of XML based AIML( Artificial Intelligence Modelling Language).</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=3eff2f7860ef\" width=\"1\" height=\"1\" alt=\"\">\n","content":"\n<h3>Jarviz V 1.0\u2014A Chatbot using Rivescript</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fFKpnLF3kjCEscEkVtYLTg.jpeg\"></figure><p><a href=\"http://www.abinovarghese.com/jarviz\"><strong>Jarviz</strong></a> is a simple chatbot application created using Rivescript which is an \u201c simple scripting language for giving intelligence to chatbots and other conversational entities\u201d\u00a0. This project was inspired from one of the YouTube videos done by <a href=\"https://thecodingtrain.com/\"><strong>Coding\u00a0Train</strong></a>.</p>\n<p>I have used Java Interpreter Library of the Rivescript and have integrated the same with person website. This library is Open Source and is another kind of XML based AIML( Artificial Intelligence Modelling Language).</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=3eff2f7860ef\" width=\"1\" height=\"1\" alt=\"\">\n","enclosure":{},"categories":["chatbot-development","rivescript","chatbots","ai"]}]}